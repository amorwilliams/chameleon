package ${package};

import android.app.Activity;
import android.content.Intent;
import android.util.Log;

import com.ucloud.game.Constants;
import com.ucloud.game.IDispatcherCb;
import com.ucloud.game.IPlatformAPI;
import com.ucloud.game.JsonMaker;

public final class $impclass implements IPlatformAPI {

   /**
     * init the SDK
     * @param activity the activity to give the real SDK
     * @param cb callback function when the request is finished, the JSON object is null
     */
    @Override
    public void init(android.app.Activity activity,
		     IDispatcherCb cb) {
    }

    /**
     * user login to platform
     * @param activity the activity to give the real SDK
     * @param cb JSON object will have two fields
     *           token : the access token from the platform
     *           others: a segment of json string for SDK server
     */
    @Override
    public void login(android.app.Activity activity,
		      IDispatcherCb cb) {
    }

    /**
     * user charge the currency in the game
     * @param activity
     * @param orderId the order id from server
     * @param uid the user id of the platform
     * @param accessToken the session token of the platform
     * @param uidInGame player id in the game
     * @param userNameInGame  player name in the game
     * @param serverId  current server id
     * @param currencyName the currency name
     * @param rate the rate of the game currency to RMB, e.g. ï¿¥1.0 can buy 10 game currency, then
     *             rate = 10
     * @param realPayMoney the real money to pay
     * @param allowUserChange can user change the amnout he paid
     * @param cb JSON object will be null
     */
     public void charge(Activity activity,
                        String orderId,
                        String uid,
                        String accessToken,
                        String uidInGame,
                        String userNameInGame,
                        String serverId,
                        String currencyName,
                        int rate,
                        int realPayMoney,
                        boolean allowUserChange,
                        IDispatcherCb cb) {
    }

    /**
     *  user buy a product
     * @param activity the activity to give the real SDK
     * @param orderId the order id from server
     * @param uid the user id of the platform
     * @param accessToken the session token of the platform
     * @param uidInGame player id in the game
     * @param userNameInGame player name in the game
     * @param serverId  current server id
     * @param productName the name of the product
     * @param productID the id of the product
     * @param productCount the count of product
     * @param realPayMoney the real money to pay
     * @param cb JSON object will be null
     */
    @Override
    public void buy(Activity activity,
                    String orderId,
                    String uid,
                    String accessToken,
                    String uidInGame,
                    String userNameInGame,
                    String serverId,
                    String productName,
                    String productID,
                    int productCount,
                    int realPayMoney,
                    IDispatcherCb cb) {
    }


    /**
     * user logout
     * @param activity the activity to give the real SDK
     * @param cb can be null, JSON object will be null
     */
    @Override
    public void logout(Activity activity,
                       IDispatcherCb cb) {
    }

    /**
     * for user to switch the account, to many platform it performs logout then login
     * @param activity the activity to give the real SDK
     * @param cb JSON object is the same as the login callback
     */
    @Override
    public void switchAccount(Activity activity, IDispatcherCb cb) {
    }

    /**
     * create the float tool bar ( required by 91, UC)
     * @param activity the activity to give the real SDK
     * @param cb JSON object will contain a flag:
     *           SDK_UI_OPEN indicates the SDK UI is opend
     *           SDK_UI_CLOSE indicates the SDK UI is closed
     */
    @Override
    public void createToolBar(Activity activity, IDispatcherCb cb) {
    }

    /**
     *  show or hide the float tool bar (required by 91, UC)
     * @param activity the activity to give the real SDK
     * @param x the width parameter, locate in x%
     * @param y the height parameter, locate in y%
     * @param visible true for show, false for hide
     */
    @Override
    public void showFloatBar(Activity activity, int x, int y, boolean visible) {
    }

    /**
     *  destroy the tool bar
     * @param activity the activity to give the real SDK
     */
    @Override
    public void destroyToolBar(Activity activity) {
    }

    /**
     *  when the app is activate from the background( refer to 91 doc, only required by 91)
     * @param activity the activity to give the real SDK
     * @param cb JSON object will be null
     */
    @Override
    public void onPause(Activity activity, IDispatcherCb cb) {
    }

    /**
     *  check if the user is adult, if the platform doesn't provide this interface, user will be
     *  treated as adult
     * @param activity the activity to give the real SDK
     * @param uid platform user id
     * @param accessToken access token
     * @param cb JSON object will receive flag:
     *           ANTI_ADDITION_ADULT
     *           ANTI_ADDITION_CHILD
     *           ANTI_ADDITION_UNKNOWN
     */
    @Override
    public void antiAddiction(Activity activity,
                              String uid,
                              String accessToken,
                              IDispatcherCb cb) {
    }


    /**
     * destroy the sdk instance
     * @param activity
     * @param cb can be null, otherwise it will called when the sdk is desctoryed, JSON will be null
     */
    @Override
    public void destroy(Activity activity,
                        IDispatcherCb cb) {
    }

    /**
     *
     * @return the current platform name
     */
    @Override
    public String getPlatformName() {
    }
}

